# -*- coding: utf-8 -*-

import serial 
import threading
import time
import speech_recognition as sr 
import pyttsx3
 

engine = pyttsx3.init(debug = 1)

voices = engine.getProperty('voices')
contar = 0;
for vozes in voices: 
    print(contar, vozes.name)
    contar += 1
    
    
voz = 0
engine.setProperty('voice', voices[voz].id)

r = sr.Recognizer()

mic = sr.Microphone()

conectado = False
porta = 'COM3'
velocidadeBaud = 9600

mensagensRecebidas = 1;
desligarArduinoThread = False

falarTexto = False;
textoRecebido = "";

SerialArduino = '';

try:
    SerialArduino = serial.Serial(porta, velocidadeBaud, timeout = 0.2)
except:
    print("Verificar Porta serial ou religar arduiuno")
    
    
def handle_data(data):
    global mensagensRecebidas, enigne, falarTexto, textoRecebido
    print("Recebi" + str(mensagensRecebidas) + ": "+ data)
    
    mensagensRecebidas += 1
    textoRecebido = data 
    falarTexto = True

def read_from_port(ser):
    global conectado, desligarArduinoThread
    
    while not conectado:
        conectado = True
        
        while True:
            reading = ser.readline().decode()
            if reading != "":
                handle_data(reading)
            if desligarArduinoThread:
                print("Delisgando Arudino")
                break


lerSerialThread = threading.Thread(target = read_from_port, args =(SerialArduino))
lerSerialThread.start()


print("Preparando Arduino")
time.sleep(6)
print("Arduino Pronto")

while (True):
    if falarTexto:
        engine.say(textoRecebido)
        engine.runAdndWait()
        
        
        
        falarTexto = False
        #time.sleep(3)
        
    try:
        with mic as fonte:
            r.adjust_for_ambient_noise(fonte)
            print("Fale alguma coisa doid√£o")
            audio = r.listen(fonte)
            print("Enviando para reconhecimento")
        try:
            text = r.recognize_google(audio, language = "pt-BR")
            print("Voce disse: {}".format(text))
            if text == "ligar" or text == "Desligar":
                try:
                    pass
                    
                    
                except:
                    print("sem Socket")
            SerialArduino.write((text + '\n').encode())
            
            print("Dado enviado")
            if(text == "desativar"):
                print("Saindo")
                
                desativando = "Tijolo Robotico"
                
                engine.say(desativando)
                engine.runAndWait()
                
              
                engine.stop()
                desligarArduinoThread = True
                SerialArduino.close()
                lerSerialThread.join()
                break
        
        except:
            print("Nao entendi o que voce disse\n")
            
        time.sleep(2)
        
    except(KeyboardInterrupt, SystemExit):
        print("Apertou o ctrl + c")
        engine.stop()
        desligarArduinoThread = True
        SerialArduino.close()
        lerSerialThread.join()
        break
